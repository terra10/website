Resources:
  ######################
  ## S3
  ######################
  BUCKET:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${file(./serverless.yml):service.name}-cloudfront-${file(./serverless.yml):provider.stage}
      AccessControl: Private
      VersioningConfiguration:
          Status: Suspended
  BUCKETPOLICY:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: BUCKET
      PolicyDocument:
        Statement:
        - Action:
          - s3:GetObject
          Effect: Allow
          Resource:
            Fn::Join:
            - ""
            -
              - "arn:aws:s3:::"
              - Ref: BUCKET
              - "/*"
          Principal:
            CanonicalUser:
              Fn::GetAtt: CLOUDFRONTORIGINACCESSIDENTITY.S3CanonicalUserId
  ####################
  ## CloudFront
  ####################
  CLOUDFRONTORIGINACCESSIDENTITY:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "terra10"
  CLOUDFRONTDISTRIBUTION:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - ${file(./serverless.yml):custom.prefix-web}terra10.io
        DefaultCacheBehavior:
          Compress: true
          ForwardedValues:
            QueryString: false
          TargetOriginId: ${file(./serverless.yml):service.name}-origin-${file(./serverless.yml):provider.stage}
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        CustomErrorResponses:
        - ErrorCachingMinTTL: 300
          ErrorCode: 403
          ResponseCode: 200
          ResponsePagePath: /index.html
        - ErrorCachingMinTTL: 300
          ErrorCode: 404
          ResponseCode: 200
          ResponsePagePath: /index.html
        Enabled: true
        HttpVersion: http2
        Origins:
        - DomainName:
            Fn::Join:
            - ""
            - - Ref: BUCKET
              - ".s3.amazonaws.com"
          Id: ${file(./serverless.yml):service.name}-origin-${file(./serverless.yml):provider.stage}
          S3OriginConfig:
            OriginAccessIdentity:
              Fn::Join:
              - ""
              - - "origin-access-identity/cloudfront/"
                - Ref: CLOUDFRONTORIGINACCESSIDENTITY
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: 
            Fn::Join:
            - ""
            - - "arn:aws:acm:us-east-1:"
              - Ref: AWS::AccountId
              - ":certificate/4afc4da5-db5a-4c75-a6c4-d4ac4333ae3d"
          MinimumProtocolVersion: TLSv1.1_2016
          SslSupportMethod: sni-only


